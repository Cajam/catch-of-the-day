{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","components/Fish.js","sample-fishes.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","classNames","timeout","enter","exit","name","price","onClick","removeFromOrder","handleClick","orderIds","Object","keys","total","reduce","prevTotal","component","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","console","log","fetch","storeId","context","store","post","data","user","setState","provider","authProvider","auth","FacebookAuthProvider","signInWithPopup","then","logout","signOut","loadSampleFishes","Fish","addToOrder","details","src","alt","disabled","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.7bb2ee12.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from \"react\";\nimport { getFunName } from \"../helpers\";\n\nclass StorePicker extends React.Component {\n  myInput = React.createRef();\n\n  goToStore = event => {\n    // 1. Stop the form from submitting\n    event.preventDefault();\n    // 2. get the text from that input\n    const storeName = this.myInput.current.value;\n    // 3. Change the page to /store/whatever-they-entered\n    this.props.history.push(`/store/${storeName}`);\n  };\n  render() {\n    return (\n      <form className=\"store-selector\" onSubmit={this.goToStore}>\n        <h2>Please Enter A Store</h2>\n        <input\n          type=\"text\"\n          ref={this.myInput}\n          required\n          placeholder=\"Store Name\"\n          defaultValue={getFunName()}\n        />\n        <button type=\"submit\">Visit Store →</button>\n      </form>\n    );\n  }\n}\n\nexport default StorePicker;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Header = props => (\n  <header className=\"top\">\n    <h1>\n      Catch\n      <span className=\"ofThe\">\n        <span className=\"of\">Of</span>\n        <span className=\"the\">The</span>\n      </span>\n      Day\n    </h1>\n    <h3 className=\"tagline\">\n      <span>{props.tagline}</span>\n    </h3>\n  </header>\n);\n\nHeader.propTypes = {\n  tagline: PropTypes.string.isRequired\n}\n\nexport default Header;\n","import React from \"react\";\nimport { formatPrice } from \"../helpers\";\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nclass Order extends React.Component {\n  renderOrder = (key) => {\n    const fish = this.props.fishes[key];\n    const count = this.props.order[key];\n    const isAvailable = fish && fish.status === \"available\";\n\n    // if there's no fish loaded, show nothing in the order\n    if (!fish) return null;\n\n    if (!isAvailable) {\n      return (\n        <CSSTransition>\n          <li key={key}>\n            Sorry {fish ? fish.name : 'fish'} is no longer available\n        <button onClick={this.handleClick}>Remove</button>\n          </li>\n        </CSSTransition>\n      )\n    }\n\n    return (\n      <CSSTransition classNames=\"order\" key={key} timeout={{ enter: 1500, exit: 1500 }}>\n        <li key={key}>\n          {count} lbs {fish.name}\n          {formatPrice(fish.price)}\n          <button onClick={() => this.props.removeFromOrder(key)}>Remove</button>\n        </li>\n      </CSSTransition>\n    )\n  }\n\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const fish = this.props.fishes[key];\n      const count = this.props.order[key];\n      const isAvailable = fish && fish.status === 'available';\n      if (isAvailable) {\n        return prevTotal + (count * fish.price);\n      }\n      return prevTotal;\n    }, 0);\n\n    return (\n      <div className=\"order-wrap\">\n        <h2>Order</h2>\n        <TransitionGroup component=\"ul\" className=\"order\">\n          {orderIds.map(this.renderOrder)}\n        </TransitionGroup>\n        <div className=\"total\">\n          Total: <strong>{formatPrice(total)}</strong>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Order;\n","import React from \"react\";\n\nclass AddFishForm extends React.Component {\n  nameRef = React.createRef();\n  priceRef = React.createRef();\n  statusRef = React.createRef();\n  descRef = React.createRef();\n  imageRef = React.createRef();\n\n  createFish = event => {\n    // 1.  stop the form from submitting\n    event.preventDefault();\n    const fish = {\n      name: this.nameRef.current.value,\n      price: parseFloat(this.priceRef.current.value),\n      status: this.statusRef.current.value,\n      desc: this.descRef.current.value,\n      image: this.imageRef.current.value\n    };\n    this.props.addFish(fish);\n    // refresh the form\n    event.currentTarget.reset();\n  };\n  render() {\n    return (\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\n        <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n        <input\n          name=\"price\"\n          ref={this.priceRef}\n          type=\"text\"\n          placeholder=\"Price\"\n        />\n        <select name=\"status\" ref={this.statusRef}>\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\n        <input\n          name=\"image\"\n          ref={this.imageRef}\n          type=\"text\"\n          placeholder=\"Image\"\n        />\n        <button type=\"submit\">+ Add Fish</button>\n      </form>\n    );\n  }\n}\n\nexport default AddFishForm;\n","import React from \"react\";\n\nclass EditFishForm extends React.Component {\n    handleChange = event => {\n        // Take a copy of the current fish \n        const updatedFish = {\n            ...this.props.fish,\n            [event.currentTarget.name]: event.currentTarget.value\n        };\n        // Update \"upstream\" through React using the updateFesh method\n        this.props.updateFish(this.props.index, updatedFish);\n    };\n\n    render() {\n        return (\n            <div className=\"fish-edit\">\n                <input type=\"text\" name=\"name\" onChange={this.handleChange} value={this.props.fish.name} />\n                <input type=\"text\" name=\"price\" onChange={this.handleChange} value={this.props.fish.price} />\n                <select type=\"text\" name=\"status\" onChange={this.handleChange} value={this.props.fish.status}>\n                    <option value=\"available\">Fresh!</option>\n                    <option value=\"unavailable\">Sold Out!</option>\n                </select>\n                <textarea name=\"desc\" onChange={this.handleChange} value={this.props.fish.desc} />\n                <input type=\"text\" name=\"image\" onChange={this.handleChange} value={this.props.fish.image} />\n                <button onClick={() => this.props.deleteFish(this.props.index)}>Delete Fish</button>\n            </div>\n        )\n    }\n};\n\nexport default EditFishForm;","import React from 'react';\n\nconst Login = (props) => (\n    <nav className=\"login\">\n        <h2>Inventory Login</h2>\n        <p>Sign in to manage your inventory</p>\n        <button className=\"facebook\" onClick={() => props.authenticate(\"Facebook\")}>\n            Login with Facebook\n        </button>\n    </nav>\n);\n\nexport default Login;","import Rebase from \"re-base\";\nimport firebase from \"firebase\";\n\n // For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseApp  = firebase.initializeApp({\n  apiKey: \"AIzaSyDquvyIwzZc3RbLzBGqU-7k-08a2_q7w3s\",\n  authDomain: \"catch-of-the-day-64008.firebaseapp.com\",\n  projectId: \"catch-of-the-day-64008\",\n  storageBucket: \"catch-of-the-day-64008.appspot.com\",\n  messagingSenderId: \"692893382698\",\n  appId: \"1:692893382698:web:4666fd842cbbaee80beb53\",\n  measurementId: \"G-17Q8K90XGM\"\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n// This is a named export\nexport { firebaseApp };\n\n// this is a default export\nexport default base;\n","import React from \"react\";\nimport AddFishForm from \"./AddFishForm\";\nimport EditFishForm from \"./EditFishForm\";\nimport Login from \"./Login\";\nimport firebase from 'firebase';\nimport base, { firebaseApp } from \"../base\";\n\nclass Inventory extends React.Component {\n  state = {\n    uid: null,\n    owner: null\n  }\n\n  authHandler = async (authData) => {\n    console.log(authData);\n    // Look up the current store\n    const store = await base.fetch(this.props.storeId, { context: this })\n    console.log(\"Current store: \", store);\n    // Claim it if there is no owner\n    if (!store.owner) {\n      console.log(\"New store owner!\");\n      // save it as our own \n      await base.post(`${this.props.storeId}/owner`, {\n        data: authData.user.uid\n      });\n    }\n    // Set the state of the inventory component to reflect the current user\n    this.setState({\n      uid: authData.user.uid,\n      owner: store.owner || authData.user.uid\n    });\n  }\n\n  authenticate = (provider) => {\n    console.log(\"Login\");\n    const authProvider = new firebase.auth.FacebookAuthProvider();\n    firebaseApp\n      .auth()\n      .signInWithPopup(authProvider)\n      .then(this.authHandler);\n  }\n\n  logout = async () => {\n    console.log(\"Logging out\");\n    await firebase.auth().signOut();\n    this.setState({ uid: null });\n  }\n\n  render() {\n    const logout = <button onClick={this.logout}>Log Out</button>\n\n    // check if they're logged in already\n    if (!this.state.uid) {\n      return (<Login authenticate={this.authenticate} />)\n    }\n    // check if they're not the owner of the store\n    if (this.state.uid !== this.state.owner) {\n      return (\n        <div>\n          <p>Sorry, you are not the owner of this store.</p>\n          {logout}\n        </div>\n      )\n    }\n    // if they are the owner, render the inventory component\n    return (\n      <div className=\"inventory\">\n        <h2>Inventory</h2>\n        {Object.keys(this.props.fishes).map(key =>\n          <EditFishForm\n            key={key}\n            index={key}\n            updateFish={this.props.updateFish}\n            deleteFish={this.props.deleteFish}\n            fish={this.props.fishes[key]}\n          />)}\n        <AddFishForm addFish={this.props.addFish} />\n        <button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\n        {logout}\n      </div>\n    );\n  }\n}\n\nexport default Inventory;","import React from \"react\";\nimport { formatPrice } from \"../helpers\";\nimport PropTypes from \"prop-types\";\n\nclass Fish extends React.Component {\n    // type checking for React! Won't go to production though\n    static propTypes = {\n        details: PropTypes.shape({\n            image: PropTypes.string,\n            name: PropTypes.string,\n            desc: PropTypes.string,\n            status: PropTypes.string,\n            price: PropTypes.number,\n        }),\n        addToOrder: PropTypes.func,\n    }\n\n    handleClick = () => {\n        this.props.addToOrder(this.props.index);\n    }\n\n    render() {\n        // You can write out all these const's or you can use ES6 destructuring\n        // const image=this.props.details.image;\n        // const name=this.props.details.name;\n        const { image, name, price, desc, status } = this.props.details;\n        const isAvailable = status === 'available';\n\n        return (\n            <li className=\"menu-fish\">\n                <img src={image} alt={name} />\n                <h3 className=\"fish-name\">\n                    {name}\n                    <span className=\"price\">{formatPrice(price)}</span>\n                </h3>\n                <p>{desc}</p>\n                <button disabled={!isAvailable} onClick={this.handleClick}>{isAvailable ? 'Add To Order' : 'Sold Out!'}</button>\n            </li>\n        );\n    }\n};\n\nexport default Fish;","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport Inventory from \"./Inventory\";\nimport Fish from \"./Fish\";\nimport sampleFishes from \"../sample-fishes\";\nimport base from \"../base\";\n\nclass App extends React.Component {\n  state = {\n    fishes: {},\n    order: {}\n  };\n\n  componentDidMount() {\n    console.log(\"Component mounted successfully. App component is live!\");\n    const { params } = this.props.match;\n    // Reinstate localStorage, check if it already exists\n    const localStorageRef = localStorage.getItem(params.storeId);\n    if (localStorageRef) {\n      this.setState({ order: JSON.parse(localStorageRef) });\n    }\n\n    // Sync up to Firebase. It's that easy! We're using firebase for the store's fish inventory, and localStorage for the user's order\n    this.ref = base.syncState(`${this.props.match.params.storeId}/fishes`, {\n      context: this,\n      state: 'fishes'\n    });\n  }\n\n  componentDidUpdate() {\n    console.log(\"Component updated.\");\n    localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order));\n  }\n\n  componentWillUnmount() {\n    console.log(\"Component unmounting! App component no longer showing.\");\n    // Unmount from Firebase so you don't have memory leaks once you're done with a store\n    base.removeBinding(this.ref);\n  }\n\n  addFish = fish => {\n    // 1. Take a copy of the existing state\n    const fishes = { ...this.state.fishes };\n    // 2. Add our new fish to that fishes variable\n    fishes[`fish${Date.now()}`] = fish;\n    // 3. Set the new fishes object to state\n    this.setState({ fishes });\n  };\n\n  // Used by EditFishForm to update date \"upstream\" in React\n  updateFish = (key, updatedFish) => {\n    // Take a copy of the current state fish\n    const fishes = { ...this.state.fishes };\n    // Update state with new fishes\n    fishes[key] = updatedFish;\n    // Set that to the new state\n    this.setState({ fishes });\n  }\n\n  deleteFish = (key) => {\n    // Take a copy of state\n    const fishes = { ...this.state.fishes };\n    // Update the state by removing an item\n    fishes[key] = null;\n    // Update state\n    this.setState({ fishes });\n  }\n\n  loadSampleFishes = () => {\n    this.setState({ fishes: sampleFishes });\n  }\n\n  addToOrder = (key) => {\n    // Take a copy of state\n    const order = { ...this.state.order };\n    // Update the order \n    order[key] = order[key] + 1 || 1;\n    // Call setState to update the state object\n    this.setState({ order });\n  }\n\n  removeFromOrder = (key) => {\n    // Take a copy of the current order state\n    const order = { ...this.state.order };\n    // Delete the inventory item\n    delete order[key];\n    // Set state\n    this.setState({ order });\n  }\n\n  render() {\n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline=\"Fresh Seafood Market\" />\n          <ul className=\"fishes\">\n            {Object.keys(this.state.fishes).map(key =>\n              <Fish\n                key={key}\n                index={key}\n                details={this.state.fishes[key]}\n                addToOrder={this.addToOrder}\n              />\n            )}\n          </ul>\n        </div>\n        <Order\n          removeFromOrder={this.removeFromOrder}\n          fishes={this.state.fishes}\n          order={this.state.order}\n        />\n        <Inventory\n          addFish={this.addFish}\n          updateFish={this.updateFish}\n          deleteFish={this.deleteFish}\n          loadSampleFishes={this.loadSampleFishes}\n          fishes={this.state.fishes}\n          storeId={this.props.match.params.storeId}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\n\nconst NotFound = () => (\n  <div>\n    <h2>Not Found!?!!!!1111</h2>\n  </div>\n);\n\nexport default NotFound;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport StorePicker from \"./StorePicker\";\nimport App from \"./App\";\nimport NotFound from \"./NotFound\";\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={StorePicker} />\n      <Route path=\"/store/:storeId\" component={App} />\n      <Route component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport Router from \"./components/Router\";\nimport \"./css/style.css\";\n\nrender(<Router />, document.querySelector(\"#main\"));\n"],"sourceRoot":""}